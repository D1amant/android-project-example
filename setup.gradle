buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:0.6.3'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

tasks.addRule("setup<project> to setup project") { String taskName ->
    if (taskName.startsWith('setup')) {
        String projectName = taskName - 'setup'
        String tmpDirectory = ".$projectName-tmp"
        String projectDirectory = generateProjectDirectory(projectName)

        task gitClone(type: org.ajoberstar.gradle.git.tasks.GitClone) {
            def destination = file(tmpDirectory)
            uri = 'gitolite@git.noveogroup.com:android-kb-example'
            destinationPath = destination
            enabled = !destination.exists()
        }

        task(taskName, dependsOn: gitClone) << {
            file("$tmpDirectory/android-example").renameTo(projectDirectory)
            delete "$tmpDirectory"

            def moduleDirectory = file("$projectDirectory/$projectName")
            if (moduleDirectory.exists()) {
                throw new InvalidUserDataException("module $projectName is already exists in android-example project")
            }
            file("$projectDirectory/AndroidExample").renameTo(moduleDirectory)

            def settingsFile = file("$projectDirectory/settings.gradle")
            def settingsContent = settingsFile.getText()
            settingsFile.delete()
            settingsFile << settingsContent.replaceAll('AndroidExample', projectName)
        }
    }
}

String generateProjectDirectory(String projectName) {
    if (!(projectName ==~ /[a-zA-Z][a-zA-Z0-9]*/)) {
        throw new InvalidUserDataException("project name ($projectName) should match [a-zA-Z][a-zA-Z0-9]* pattern")
    }

    def matcher = projectName =~ /[A-Z][a-z0-9]*/
    matcher.collect({ (it.length() > 1 ? "-" : "") + it.toLowerCase() }).join() - '-'
}
